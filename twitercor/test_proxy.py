#!/usr/bin/env python3
"""
Quick proxy test script
"""
import asyncio
import httpx

async def test_proxy_quick(proxy_string):
    """Test a single proxy quickly."""
    print(f"üîÑ –¢–µ—Å—Ç—É—î–º–æ –ø—Ä–æ–∫—Å—ñ: {proxy_string}")
    
    # –ü–µ—Ä–µ–∫–æ–Ω—É—î–º–æ—Å—è —â–æ –ø—Ä–æ–∫—Å—ñ –º–∞—î –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç
    if not proxy_string.startswith(('http://', 'https://', 'socks5://')):
        proxy_string = 'http://' + proxy_string
    
    print(f"üîó –ü–æ–≤–Ω–∏–π URL: {proxy_string}")
    
    test_urls = [
        "http://ip-api.com/json/",
        "https://api.ipify.org?format=json",
        "http://httpbin.org/ip"
    ]
    
    try:
        async with httpx.AsyncClient(proxy=proxy_string, timeout=15.0) as client:
            for i, url in enumerate(test_urls, 1):
                try:
                    print(f"üì° –¢–µ—Å—Ç {i}: {url}")
                    response = await client.get(url)
                    print(f"üìä –°—Ç–∞—Ç—É—Å: {response.status_code}")
                    
                    if response.status_code == 200:
                        try:
                            data = response.json()
                            ip = data.get('query') or data.get('ip') or data.get('origin', 'Unknown')
                            print(f"‚úÖ IP: {ip}")
                            print(f"‚úÖ –ü—Ä–æ–∫—Å—ñ –ø—Ä–∞—Ü—é—î —á–µ—Ä–µ–∑ {url}")
                            return True
                        except:
                            print(f"‚úÖ –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–µ (–Ω–µ JSON –≤—ñ–¥–ø–æ–≤—ñ–¥—å)")
                            return True
                    else:
                        print(f"‚ùå HTTP {response.status_code}")
                        
                except Exception as e:
                    print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –∑ {url}: {str(e)[:100]}")
                    continue
                    
        print("‚ùå –í—Å—ñ —Ç–µ—Å—Ç–∏ –Ω–µ –≤–¥–∞–ª–∏—Å—è")
        return False
        
    except Exception as e:
        print(f"‚ùå –ó–∞–≥–∞–ª—å–Ω–∞ –ø–æ–º–∏–ª–∫–∞: {str(e)}")
        return False

async def main():
    # –í–∞—à –ø—Ä–æ–∫—Å—ñ
    proxy = "RQQ6C0VF:MZH4VXZU@213.145.79.139:48832"
    
    print("="*60)
    print("üß™ –®–í–ò–î–ö–ò–ô –¢–ï–°–¢ –ü–†–û–ö–°–Ü")
    print("="*60)
    print()
    
    success = await test_proxy_quick(proxy)
    
    print()
    print("="*60)
    if success:
        print("üéâ –ü–†–û–ö–°–Ü –ü–†–ê–¶–Æ–Ñ!")
    else:
        print("üí• –ü–†–û–ö–°–Ü –ù–ï –ü–†–ê–¶–Æ–Ñ")
    print("="*60)

if __name__ == "__main__":
    asyncio.run(main())